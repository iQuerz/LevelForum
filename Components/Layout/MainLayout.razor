@inherits LayoutComponentBase
@using System.Collections.Generic

<div class="app-shell">
    <!-- TOPBAR -->
    <header class="app-topbar-wrap">
        <AppTopbar Title="@Title"
                 UnreadCount="@UnreadCount"
                 OnSearch="HandleSearch"
                 OnToggleSidebar="ToggleSidebar" />
    </header>

    <!-- LAYOUT GRID -->
    <div class="app-shell-grid">
      <!-- SIDEBAR (desktop mini / mobile drawer) -->
        <TopicsSidebar />

        <!-- MAIN CONTENT -->
        <main class="app-main">
            <div class="app-main-inner">
              @Body
            </div>
        </main>
    </div>
</div>

<style>
    /* SHELL LAYOUT */
    .app-shell { min-height:100vh; background:var(--bg, #0f1115); color:var(--text,#e5e7eb); }
    .app-topbar-wrap { position:sticky; top:0; z-index:50; background:var(--surface,#151923); border-bottom:1px solid rgba(255,255,255,.06); }
    .app-shell-grid { display:grid; grid-template-columns: 72px 1fr; gap:0; }
  
    /* MAIN */
    .app-main { min-height: calc(100vh - 56px); }
    .app-main-inner { max-width:1120px; margin:0 auto; padding:16px; }
  
    /* Responsive: on small screens the sidebar becomes overlay */
    @@media (max-width: 960px){
    .app-shell-grid { grid-template-columns: 1fr; }
    }
</style>

@code{
    [Parameter] public string Title { get; set; } = "LevelTMI";
    [Parameter] public int UnreadCount { get; set; } = 0;

    [Parameter] public EventCallback<string?> OnSearch { get; set; }

    bool _sidebarOpen; // mobile drawer state

    void ToggleSidebar() => _sidebarOpen = !_sidebarOpen;
    void CloseSidebar() => _sidebarOpen = false;

    Task HandleSearch(string? q) => OnSearch.InvokeAsync(q);
}
